// Generated by gencpp from file p4/ComputeCost.msg
// DO NOT EDIT!


#ifndef P4_MESSAGE_COMPUTECOST_H
#define P4_MESSAGE_COMPUTECOST_H

#include <ros/service_traits.h>


#include <p4/ComputeCostRequest.h>
#include <p4/ComputeCostResponse.h>


namespace p4
{

struct ComputeCost
{

typedef ComputeCostRequest Request;
typedef ComputeCostResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct ComputeCost
} // namespace p4


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::p4::ComputeCost > {
  static const char* value()
  {
    return "e8778a61652581d27a3ff06e39854dc1";
  }

  static const char* value(const ::p4::ComputeCost&) { return value(); }
};

template<>
struct DataType< ::p4::ComputeCost > {
  static const char* value()
  {
    return "p4/ComputeCost";
  }

  static const char* value(const ::p4::ComputeCost&) { return value(); }
};


// service_traits::MD5Sum< ::p4::ComputeCostRequest> should match 
// service_traits::MD5Sum< ::p4::ComputeCost > 
template<>
struct MD5Sum< ::p4::ComputeCostRequest>
{
  static const char* value()
  {
    return MD5Sum< ::p4::ComputeCost >::value();
  }
  static const char* value(const ::p4::ComputeCostRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::p4::ComputeCostRequest> should match 
// service_traits::DataType< ::p4::ComputeCost > 
template<>
struct DataType< ::p4::ComputeCostRequest>
{
  static const char* value()
  {
    return DataType< ::p4::ComputeCost >::value();
  }
  static const char* value(const ::p4::ComputeCostRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::p4::ComputeCostResponse> should match 
// service_traits::MD5Sum< ::p4::ComputeCost > 
template<>
struct MD5Sum< ::p4::ComputeCostResponse>
{
  static const char* value()
  {
    return MD5Sum< ::p4::ComputeCost >::value();
  }
  static const char* value(const ::p4::ComputeCostResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::p4::ComputeCostResponse> should match 
// service_traits::DataType< ::p4::ComputeCost > 
template<>
struct DataType< ::p4::ComputeCostResponse>
{
  static const char* value()
  {
    return DataType< ::p4::ComputeCost >::value();
  }
  static const char* value(const ::p4::ComputeCostResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // P4_MESSAGE_COMPUTECOST_H
