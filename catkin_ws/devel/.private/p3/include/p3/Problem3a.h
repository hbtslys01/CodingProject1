// Generated by gencpp from file p3/Problem3a.msg
// DO NOT EDIT!


#ifndef P3_MESSAGE_PROBLEM3A_H
#define P3_MESSAGE_PROBLEM3A_H

#include <ros/service_traits.h>


#include <p3/Problem3aRequest.h>
#include <p3/Problem3aResponse.h>


namespace p3
{

struct Problem3a
{

typedef Problem3aRequest Request;
typedef Problem3aResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Problem3a
} // namespace p3


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::p3::Problem3a > {
  static const char* value()
  {
    return "39287755337901955a554fcb016050f9";
  }

  static const char* value(const ::p3::Problem3a&) { return value(); }
};

template<>
struct DataType< ::p3::Problem3a > {
  static const char* value()
  {
    return "p3/Problem3a";
  }

  static const char* value(const ::p3::Problem3a&) { return value(); }
};


// service_traits::MD5Sum< ::p3::Problem3aRequest> should match 
// service_traits::MD5Sum< ::p3::Problem3a > 
template<>
struct MD5Sum< ::p3::Problem3aRequest>
{
  static const char* value()
  {
    return MD5Sum< ::p3::Problem3a >::value();
  }
  static const char* value(const ::p3::Problem3aRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::p3::Problem3aRequest> should match 
// service_traits::DataType< ::p3::Problem3a > 
template<>
struct DataType< ::p3::Problem3aRequest>
{
  static const char* value()
  {
    return DataType< ::p3::Problem3a >::value();
  }
  static const char* value(const ::p3::Problem3aRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::p3::Problem3aResponse> should match 
// service_traits::MD5Sum< ::p3::Problem3a > 
template<>
struct MD5Sum< ::p3::Problem3aResponse>
{
  static const char* value()
  {
    return MD5Sum< ::p3::Problem3a >::value();
  }
  static const char* value(const ::p3::Problem3aResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::p3::Problem3aResponse> should match 
// service_traits::DataType< ::p3::Problem3a > 
template<>
struct DataType< ::p3::Problem3aResponse>
{
  static const char* value()
  {
    return DataType< ::p3::Problem3a >::value();
  }
  static const char* value(const ::p3::Problem3aResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // P3_MESSAGE_PROBLEM3A_H
